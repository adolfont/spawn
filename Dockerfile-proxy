FROM elixir:1.14-alpine as builder

ENV MIX_ENV=prod

WORKDIR /app

RUN apk add --no-cache --update git build-base ca-certificates zstd

RUN mkdir config
COPY config/ ./config
COPY spawn_proxy/ ./spawn_proxy
COPY lib/ ./lib
COPY mix.exs .
COPY mix.lock .

RUN mix local.rebar --force \
    && mix local.hex --force \
    && mix deps.get \
    && mix release.init


ENV RELEASE_DISTRIBUTION="name"

# Overriden at runtime
ENV POD_IP="127.0.0.1"

# This will be the basename of node
ENV RELEASE_NAME="proxy"

# This will be the full nodename
ENV RELEASE_NODE="${RELEASE_NAME}@${POD_IP}"

RUN echo "-setcookie ${NODE_COOKIE}" >> ./rel/vm.args.eex

#RUN echo "-name proxy@${POD_IP}" >> ./rel/vm.args.eex \
#    && echo "-setcookie ${NODE_COOKIE}" >> ./rel/vm.args.eex

#RUN echo "export POD_A_RECORD=$(echo $POD_IP | sed 's/\./-/g')" >> ./rel/env.sh.eex \
#    && echo "export RELEASE_DISTRIBUTION=name" >> ./rel/env.sh.eex \
#    && echo "export RELEASE_NODE=<%= @release.name %>@${POD_A_RECORD}.${NAMESPACE}.pod.cluster.local" >> ./rel/env.sh.eex 

RUN cd spawn_proxy/proxy \
    && mix deps.get \
    && mix release proxy

# ---- Application Stage ----
FROM alpine:3
#RUN apk add --no-cache --update bash openssl build-base ca-certificates zstd
RUN apk add --no-cache --update zstd ncurses-libs libstdc++ libgcc

WORKDIR /home/app
COPY --from=builder /app/_build/prod/rel/bakeware .

RUN adduser app --disabled-password --home app
RUN chown -R app: /home/app
USER app
RUN mkdir -p app/.cache/bakeware

ENV MIX_ENV=prod

ENTRYPOINT ["./proxy", "start"]
